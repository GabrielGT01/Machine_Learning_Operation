env:
  REGISTRY: tripdurationimage.azurecr.io
  IMAGE_NAME: durationcalculate
  APP_NAME: trip-duration-minute

jobs:
  # ----------------------
  # Continuous Integration
  # ----------------------
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 06-Azure
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Verify files exist
        run: |
          echo "Current directory: $(pwd)"
          ls -la
          echo "Checking for requirements.txt:"
          test -f requirements.txt && echo "✓ requirements.txt found" || (echo "✗ requirements.txt not found" && exit 1)
          echo "Checking for app.py:"
          test -f app.py && echo "✓ app.py found" || echo "ℹ app.py not found (ok if your entrypoint is different)"
          echo "Checking for Dockerfile:"
          test -f Dockerfile && echo "✓ Dockerfile found" || (echo "✗ Dockerfile not found" && exit 1)

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint code
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Run unit tests (optional)
        run: |
          echo "Running unit tests in $(pwd)"
          # python -m pytest tests/ -v

  # ----------------------------
  # Build and Push Docker Image
  # ----------------------------
  build:
    name: Build and Push Container
    runs-on: ubuntu-latest
    needs: test
    outputs:
      image-tag: ${{ steps.pick.outputs.deploy_tag }}
      image-digest: ${{ steps.build.outputs.digest }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Verify Docker context
        run: |
          echo "Current directory: $(pwd)"
          echo "Checking 06-Azure directory:"
          ls -la 06-Azure/
          test -f 06-Azure/Dockerfile && echo "✓ Dockerfile found" || (echo "✗ Dockerfile not found" && exit 1)

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Using# Complete Azure Configuration Alignment

env:
  REGISTRY: tripdurationimage.azurecr.io
  IMAGE_NAME: durationcalculate
  REPOSITORY: durationcalculate  # This matches your ACR repository
  APP_NAME: trip-duration-minute

# Updated build step with correct paths and authentication
- name: Log in to Azure Container Registry
  uses: docker/login-action@v3
  with:
    registry: ${{ env.REGISTRY }}
    username: tripdurationimage  # Your ACR username (same as registry name without .azurecr.io)
    password: ${{ secrets.AZURE_ACR_PASSWORD }}

- name: Build and push container image
  id: build
  uses: docker/build-push-action@v5
  with:
    context: ./06-Azure           # ✅ Build context points to 06-Azure directory  
    file: ./06-Azure/Dockerfile   # ✅ Dockerfile path from repo root
    push: true
    tags: |
      ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:latest
      ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ github.sha }}
    cache-from: type=gha
    cache-to: type=gha,mode=max
    platforms: linux/amd64

# Deploy tag should use the repository name
- name: Pick deploy tag
  id: pick
  run: |
    echo "deploy_tag=${{ env.REGISTRY }}/${{ env.REPOSITORY }}:latest" >> $GITHUB_OUTPUT
